@model WebSite.Models.Data.Picks.OptionPick

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>OptionPick</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.OptionPickTypeId, "Type")
        </div>
        <div class="editor-field">
            @Html.DropDownList("OptionPickTypeId", String.Empty)
            @Html.ValidationMessageFor(model => model.OptionPickTypeId)
        </div>

        @Html.HiddenFor(model => model.PickId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Symbol)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Symbol)
            @Html.ValidationMessageFor(model => model.Symbol)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PublishingDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.PublishingDate)
            @Html.HiddenFor(model => model.PublishingDate)
            @Html.ValidationMessageFor(model => model.PublishingDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsPublished)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.IsPublished)
            @Html.HiddenFor(model => model.IsPublished)
            @Html.ValidationMessageFor(model => model.IsPublished)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreationDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.CreationDate)
            @Html.HiddenFor(model => model.CreationDate)
            @Html.ValidationMessageFor(model => model.CreationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClosingDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ClosingDate)
            @Html.HiddenFor(model => model.ClosingDate)
            @Html.ValidationMessageFor(model => model.ClosingDate)
        </div>
        <div>Legs
            @foreach (WebSite.Models.Data.Picks.OptionPickLeg leg in Model.Legs)
            {
                Html.DisplayFor(m => leg);
            }
            @Html.ActionLink("Edit Legs", "Legs", new { optionPickId = Model.PickId })
            
        </div>
        <p>
            <input type="submit" name="submitButton" value="Save Changes" />
        </p>
        @if (!Model.IsPublished)
        {
            <p>
                <input type="submit" name="publishButton" value="Save Changes and Publish to Users" />
            </p>
        }
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
