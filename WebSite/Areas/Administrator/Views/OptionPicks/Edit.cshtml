@model WebSite.Models.Data.Picks.OptionPick

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(false)

    <fieldset>
        <legend>OptionPick</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.OptionPickTypeId, "Type")
        </div>
        <div class="editor-field">
            @Html.DropDownList("OptionPickTypeId", String.Empty)
            @Html.ValidationMessageFor(model => model.OptionPickTypeId)
        </div>

        @Html.HiddenFor(model => model.PickId)

        <div class="editor-label">
            @Html.LabelFor(model => model.Symbol)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Symbol)
            @Html.ValidationMessageFor(model => model.Symbol)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PublishingDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PublishingDate)
            @Html.ValidationMessageFor(model => model.PublishingDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsPublished)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.IsPublished)
            @Html.HiddenFor(model => model.IsPublished)
            @Html.ValidationMessageFor(model => model.IsPublished)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CreationDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.CreationDate)
            @Html.HiddenFor(model => model.CreationDate)
            @Html.ValidationMessageFor(model => model.CreationDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ClosingDate)
        </div>
        <div class="editor-field">
            @Html.DisplayFor(model => model.ClosingDate)
            @Html.EditorFor(model => model.ClosingDate) (leave empty to denote today's date)
            @Html.ValidationMessageFor(model => model.ClosingDate)
        </div>
        <h3>Legs</h3>
        <table style="width: 100%;">
            <thead>
                <tr>
                    <td>Quantity</td>
                    <td>Type</td>
                    <td>Strike</td>
                    <td>Expiry Month</td>
                    <td>Expiry Year</td>
                    <td>Entry Price</td>
                    <td>Exit Price</td>
                    <td>Actions</td>
                </tr>
            </thead>
            <tbody>
                @foreach (WebSite.Models.Data.Picks.OptionPickLeg leg in Model.Legs)
                {
                    <tr>
                        <td>@leg.Quantity</td>
                        <td>@(Enum.GetName(typeof(WebSite.Models.Data.Picks.OptionPickLegType), (WebSite.Models.Data.Picks.OptionPickLegType)leg.Type))</td>
                        <td>@(leg.StrikePrice.ToString("C"))</td>
                        <td>@(Enum.GetName(typeof(WebSite.Models.Data.Picks.OptionPickLegExpirationMonth), (WebSite.Models.Data.Picks.OptionPickLegExpirationMonth)leg.ExpirationMonth))</td>
                        <td>@leg.ExpirationYear</td>
                        <td>@leg.EntryPrice.ToString("C")</td>
                        <td>@(leg.ExitPrice.HasValue ? leg.ExitPrice.Value.ToString("C") : "")</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", "OptionPickLeg", new { id = leg.OptionPickLegId }, null)
                            @Html.ActionLink("Delete", "Delete", "OptionPickLeg", new { id = leg.OptionPickLegId }, null)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @if (!Model.ClosingDate.HasValue)
        {
            @Html.ActionLink("Add Leg", "Create", "OptionPickLeg", new { optionPickId = Model.PickId }, null)
        }
        <p>
            <input type="submit" name="submitButton" value="Save Changes" />
        </p>
        @if (!Model.IsPublished)
        {
            <p>
                <input type="submit" name="publishButton" value="Save Changes and Publish to Users" />
            </p>
            <p>
                <input type="submit" name="previewButton" value="Save Changes and Send Preview Email to Admins" />
            </p>
        }
        else if (!Model.ClosingDate.HasValue)
        {
            <p>
                <input type="submit" name="closeButton" value="Close This Trade" />
            </p>
        }
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
