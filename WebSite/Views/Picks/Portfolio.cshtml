@model WebSite.Models.UI.Portfolio
@{
    ViewBag.Title = "Portfolio";
}
@section Styles
{
    <style type="text/css">
        .clickable-row
        {
            cursor: pointer;
        }

            .clickable-row:hover
            {
                background-color: #3b85e0;
            }

        .grey-background
        {
            background-color: #deeffc;
        }

        #body > table
        {
             margin: 0px auto; border-spacing: 0px; border-collapse: collapse; border-style: solid; border-width: 1px; border-color: #CCCCCC;
        }

        #body tr
        {
            border-bottom: solid 1px #CCCCCC;
        }

        #body td
        {
            padding-top: 2px;
        }

        #body h3
        {
            padding-top: 10px;
            padding-bottom: 10px;
        }
    </style>
}
<h2>Portfolio</h2>
@if (Request.IsAuthenticated)
{
<h3 style="margin-left: 6%;">Stocks</h3>
<table style="text-align: center; width: 70%;">
    <tbody>
        @{ 
            int stockIndex = 0; 
            foreach (var stockPick in Model.Stocks)
            {
                string background = string.Empty;

                if ((stockIndex & 1) > 0)
                {
                    background = "grey-background";
                }
               
                <tr class="clickable-row @(background)" onclick="window.location.href = '@Url.Action("StockPickDetail", "Picks", new { stockPickId = stockPick.PickId })';">
                    <td>@stockPick.Symbol</td>
                    <td>@stockPick.EntryPrice.ToString("C")</td>
                    <td>@stockPick.PublishingDate.Value.ToShortDateString()</td>
                    <td>@stockPick.Type.Name</td>
                    @if (stockPick.IsLongPosition)
                    {
                        <td style="color: #21892a">Long</td>
                    }
                    else
                    {
                        <td style="color: #ad2222">Short</td>
                    }
                </tr>
        
                stockIndex++;
            }
        }
    </tbody>
</table>
<h3 style="margin-left:6%;">Options</h3>
<table style="text-align: center; width: 50%;">
    <tbody>
        @{
            int optionIndex = 0;
            foreach (var optionPick in Model.Options)
            {
                string background = string.Empty;
                if ((optionIndex & 1) > 0)
                {
                    background = "grey-background";
                }
                
                <tr class="clickable-row @(background)" onclick="window.location.href = '@Url.Action("OptionPickDetail", "Picks", new { optionPickId = optionPick.PickId })';">
                    <td>@optionPick.Symbol</td>
                    <td>@optionPick.Type.Name</td>
                    <td>@optionPick.PublishingDate.Value.ToShortDateString()</td>
                </tr>
                optionIndex++;
            }
        }
    </tbody>
</table>
}
else
{
    <p class="message-info">Since you are not logged in, you are only seeing our stock and option positions that have been closed. To see our current portfolio with our stock and option picks, please log in.</p>
}
<h3>Stock positions closed within the last 31 days</h3>
@Html.Partial("_ClosedStockListPartial", Model.ClosedStocks)
<h3>Option positions closed within the last 31 days</h3>
@Html.Partial("_ClosedOptionListPartial", Model.ClosedOptions)